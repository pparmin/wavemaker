use waver::wav::*;

type Sample = i16;
const SAMPLE_MAX: u16 = 32767;
const DURATION: u32 = 5;
const SR: u32 = 44100;
const NCHANNELS: u16 = 1;
const NSAMPLES: u32 = NCHANNELS as u32 * DURATION * SR;

// static mut BUF: [Sample; NSAMPLES as usize] = [0; NSAMPLES as usize];

fn main() {
    let wav: WavHeader = WavHeader::new(); 
    wav.create_wav("output.wav");
    let mut BUF: [Sample; NSAMPLES as usize] = [0; NSAMPLES as usize];

    wav.write_data(&mut BUF, "output.wav");

    /* future API: 
     * // new() initializes a default config 
     * let config = Wave::Config::new() 
     * // config can also be generated by passing parameters
     * let config = Wave::Config::create(SR, NCHANNELS, etc.)
     * 
     * let _wav = Wave::new(config);

    
    */ 
}
